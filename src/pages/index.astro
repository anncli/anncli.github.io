---
import Section from "../components/ui/Section.astro";
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../components/layout/BaseLayout.astro";
import ContentList from "../components/shared/ContentList.astro";
import Container from "../components/ui/Container.astro";
import renderMarkdown from "../utils/markdown";

const siteConfig = await getEntry("site", "home");
if (!siteConfig) {
  throw new Error("Site configuration not found");
}

const site = siteConfig.data;

const formatDate = (date: Date | undefined) => {
  if (!date) return "";
  return date.toLocaleDateString("en-US", {
    month: "short",
    year: "numeric",
  });
};

const posts = await getCollection("blog", ({ data }: CollectionEntry<"blog">) => {
  return import.meta.env.PROD ? !data.draft : true;
});
const latestPosts = posts
  .sort(
    (a: CollectionEntry<"blog">, b: CollectionEntry<"blog">) =>
      b.data.publishedAt.getTime() - a.data.publishedAt.getTime()
  )
  .slice(0, 3);

const experiences = await getCollection("experience");
const sortedExperiences = experiences.sort(
  (a: CollectionEntry<"experience">, b: CollectionEntry<"experience">) =>
    b.data.startDate.getTime() - a.data.startDate.getTime()
);

const projects = await getCollection("projects");
const featuredProjects = projects.filter((project: CollectionEntry<"projects">) => project.data.featured).slice(0, 2);
---

<BaseLayout title={`${site.name}'s Website`} description={site.introduction}>
  <Container>
    <section class="hero">
      <h1>{site.name}</h1>
      <p class="subtitle">{site.title}</p>
      <div class="introduction">
        I am a third-year computer science student interested in exploring different applications of software. My experience range from optimizing system software at the edge of physical AI as a SWE Intern at NVIDIA to learning the applications of software in quantitative finance as a Jane Street AMP Scholar.
        
        Apart from computer science, I am also broadly interested in academic explorations of art history and global cultures. In my free time, I am a <a href="https://www.worldcubeassociation.org/persons/2023LIAN29" target="_blank" rel="noopener noreferrer">recreational speedcuber</a>, world explorer (via <a href="https://www.duolingo.com/profile/inexerror" target="_blank" rel="noopener noreferrer">learning languages</a>, playing <a href="https://www.geoguessr.com/user/5edd635afa7bc40e2ccd562a" target="_blank" rel="noopener noreferrer">GeoGuessr</a>, and <a href="https://anncli.github.io/blog/study-abroad/">studying abroad</a>), and avid <span class="tooltip">脑综<span class="tooltip-text">Short for 脑力综艺. A category of Chinese variety TV shows where contestants solve puzzles and compete in mathematical, logical, and tactical challenges.</span></span> watcher.
      </div>
      {
        site.socialLinks && (
          <div class="social-links">
            {site.socialLinks.map(({ platform, url }) => (
              <a href={url} target="_blank" rel="noopener noreferrer">
                {platform}
              </a>
            ))}
          </div>
        )
      }
    </section>

    <section class="section">
      <div class="section-header">
        <h2>{site.sections.experience.title}</h2>
        <a href="/experience">{site.sections.experience.viewAllText}</a>
      </div>
      <div class="content-list">
        {
          sortedExperiences.map((exp) => (
            <article>
              <div class="title-row">
                <div class="company-info">
                  <img src={exp.data.logo} alt="" class="company-logo" />
                  <span>{exp.data.title}</span>
                </div>
                <time>
                  {formatDate(exp.data.startDate)} - {exp.data.current ? "Present" : formatDate(exp.data.endDate)}
                </time>
              </div>
              <p class="muted-text">{exp.data.description}</p>
            </article>
          ))
        }
      </div>
    </section>


    <section class="section">
      <div class="section-header">
        <h2>{site.sections.projects.title}</h2>
        <a href="/projects">{site.sections.projects.viewAllText}</a>
      </div>
      <ContentList>
        {
          featuredProjects.map((project) => (
            <article>
              <div class="title-row">
                <a href={project.data.url} target="_blank" rel="noopener noreferrer">
                  {project.data.title}
                </a>
              </div>
              <p class="muted-text">{project.data.description}</p>
              {project.data.techs && (
                <div class="tags">
                  {project.data.techs.map((tech) => (
                    <span>{tech}</span>
                  ))}
                </div>
              )}
            </article>
          ))
        }
      </ContentList>
    </section>

    <Section>
      <div class="section-header">
        <h2>{site.sections.blog.title}</h2>
        <a href="/blog">{site.sections.blog.viewAllText}</a>
      </div>
      <ContentList>
        {
          latestPosts.map((post) => (
            <article>
              <div class="title-row">
                <a href={`/blog/${post.id}`}>{post.data.title}</a>
                {post.data.publishedAt && (
                  <time datetime={post.data.publishedAt.toISOString()}>{formatDate(post.data.publishedAt)}</time>
                )}
              </div>
              <p class="muted-text">{post.data.description}</p>
            </article>
          ))
        }
      </ContentList>
    </Section>
  </Container>
</BaseLayout>

<style>
  main {
    width: 100%;
    max-width: 640px;
    margin: 0 auto;
    padding: 2rem 0;
  }

  .hero {
    padding: 4rem 0;
  }

  .introduction {
    margin: 1.5rem 0;
    opacity: 0.9;
    position: relative;
    overflow: visible;
  }

  .section {
    margin: 4rem 0;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    margin-bottom: 2rem;
    opacity: 0.7;
  }

  .title-row {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    gap: 1rem;
    font-size: var(--text-sm);
  }

  .company-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .company-logo {
    width: 1.5rem;
    height: 1.5rem;
    object-fit: contain;
  }

  time {
    font-size: var(--text-xs);
    opacity: 0.5;
    white-space: nowrap;
  }

  .tags {
    display: flex;
    gap: 0.75rem;
    margin-top: 0.5rem;
  }

  .tags span {
    font-size: var(--text-xs);
    opacity: 0.5;
  }

  .social-links {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
    opacity: 0.7;
  }

  .tooltip {
    position: relative;
    cursor: pointer;
    background: none;
    color: var(--text-muted);
    text-decoration: underline dotted var(--text-muted);
    text-underline-offset: 0.2em;
  }
  .tooltip .tooltip-text {
    /* Pop up box styles */
    visibility: hidden;
    opacity: 0;
    position: absolute;
    left: 50%;
    bottom: 120%;
    transform: translateX(-50%);
    width: 18em;
    background: var(--text-color);
    /* Text styles */
    color: var(--bg-color);
    text-align: center;
    font-size: 0.75em;
    padding: 0.5em 1em;
    border-radius: 8px;
    white-space: pre-line;
    z-index: 100;
    box-shadow: 0 4px 16px rgba(0,0,0,0.18);
    transition: opacity 0.2s;
    pointer-events: none;
  }
  .tooltip:hover .tooltip-text {
    visibility: visible;
    opacity: 1;
  }

  @media (max-width: 640px) {
    main {
      padding: 1rem 0;
    }

    .hero {
      padding: 3rem 0;
    }

    .container {
      padding: 0 1rem;
    }
  }
</style>
